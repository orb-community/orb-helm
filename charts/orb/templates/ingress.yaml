# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
{{- if .Values.ingress.annotationsNginx }}
  annotations:
{{ toYaml .Values.ingress.annotationsNginx | indent 4 }}
{{- end }}
  name: {{ .Release.Name }}-nginx-ingress
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  rules:
    - host: {{ required "an ingress.hostname is required!" .Values.ingress.hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-ui
                port:
                  number: {{ .Values.ui.port }}
          - path: /version
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-fleet
                port:
                  number: {{ .Values.fleet.httpPort }}
  tls:
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ .Values.ingress.secret }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
{{- if .Values.ingress.annotationsNginxRewrite }}
  annotations:
{{ toYaml .Values.ingress.annotationsNginxRewrite | indent 4 }}
{{- end }}
  name: {{ .Release.Name }}-nginx-rewrite-ingress
spec:
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  rules:
    - host: "{{ .Values.ingress.hostname }}"
      http:
        paths:
          - path: /api/v1/(users/?.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-users
                port:
                  number: {{ .Values.users.httpPort }}
          - path: /api/v1/(password/?.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-users
                port:
                  number: {{ .Values.users.httpPort }}
          - path: /api/v1/(tokens)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-users
                port:
                  number: {{ .Values.users.httpPort }}
          - path: /api/v1/(keys)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-auth
                port:
                  number: {{ default .Values.auth.httpPort }}
          - path: /api/v1/(agents.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name}}-fleet
                port:
                  number: {{ default .Values.fleet.httpPort }}
          - path: /api/v1/(agent_groups.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name}}-fleet
                port:
                  number: {{ default .Values.fleet.httpPort }}
          - path: /api/v1/(sinks.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name}}-sinks
                port:
                  number: {{ default .Values.sinks.httpPort }}
          - path: /api/v1/(/features/sinks/?.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name}}-sinks
                port:
                  number: {{ default .Values.sinks.httpPort }}
          - path: /api/v1/(/features/authenticationtypes/?.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name}}-sinks
                port:
                  number: {{ default .Values.sinks.httpPort }}
          - path: /api/v1/(policies.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name}}-policies
                port:
                  number: {{ default .Values.policies.httpPort }}
  tls:
    - hosts:
        - {{ .Values.ingress.hostname }}
      secretName: {{ .Values.ingress.secret }}
